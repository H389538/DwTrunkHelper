package org.dw.common.entity;

public enum Keyword {
	ADD("add"),
	ADMIN("admin"),
	AFTER("after"),
	ALL("all"),
	ALTER("alter"),
	ANALYZE("analyze"),
	AND("and"),
	ARCHIVE("archive"),
	ARRAY("array"),
	AS("as"),
	ASC("asc"),
	AUTHORIZATION("authorization"),
	BEFORE("before"),
	BETWEEN("between"),
	BIGINT("bigint"),
	BINARY("binary"),
	BOOLEAN("boolean"),
	BOTH("both"),
	BUCKET("bucket"),
	BUCKETS("buckets"),
	BY("by"),
	CASCADE("cascade"),
	CASE("case"),
	CAST("cast"),
	CHANGE("change"),
	CHAR("char"),
	CLUSTER("cluster"),
	CLUSTERED("clustered"),
	CLUSTERSTATUS("clusterstatus"),
	COLLECTION("collection"),
	COLUMN("column"),
	COLUMNS("columns"),
	COMMENT("comment"),
	COMPACT("compact"),
	COMPACTIONS("compactions"),
	COMPUTE("compute"),
	CONCATENATE("concatenate"),
	CONF("conf"),
	CONTINUE("continue"),
	CREATE("create"),
	CROSS("cross"),
	CUBE("cube"),
	CURRENT("current"),
	CURRENT_DATE("current_date"),
	CURRENT_TIMESTAMP("current_timestamp"),
	CURSOR("cursor"),
	DATA("data"),
	DATABASE("database"),
	DATABASES("databases"),
	DATE("date"),
	DATETIME("datetime"),
	DAY("day"),
	DBPROPERTIES("dbproperties"),
	DECIMAL("decimal"),
	DEFERRED("deferred"),
	DEFINED("defined"),
	DELETE("delete"),
	DELIMITED("delimited"),
	DEPENDENCY("dependency"),
	DESC("desc"),
	DESCRIBE("describe"),
	DIRECTORIES("directories"),
	DIRECTORY("directory"),
	DISABLE("disable"),
	DISTINCT("distinct"),
	DISTRIBUTE("distribute"),
	DOUBLE("double"),
	DROP("drop"),
	ELEM_TYPE("elem_type"),
	ELSE("else"),
	ENABLE("enable"),
	END("end"),
	ESCAPED("escaped"),
	EXCHANGE("exchange"),
	EXCLUSIVE("exclusive"),
	EXISTS("exists"),
	EXPLAIN("explain"),
	EXPORT("export"),
	EXTENDED("extended"),
	EXTERNAL("external"),
	FALSE("false"),
	FETCH("fetch"),
	FIELDS("fields"),
	FILE("file"),
	FILEFORMAT("fileformat"),
	FIRST("first"),
	FLOAT("float"),
	FOLLOWING("following"),
	FOR("for"),
	FORMAT("format"),
	FORMATTED("formatted"),
	FROM("from"),
	FULL("full"),
	FUNCTION("function"),
	FUNCTIONS("functions"),
	GRANT("grant"),
	GROUP("group"),
	GROUPING("grouping"),
	HAVING("having"),
	HOLD_DDLTIME("hold_ddltime"),
	HOUR("hour"),
	IDXPROPERTIES("idxproperties"),
	IF("if"),
	IGNORE("ignore"),
	IMPORT("import"),
	IN("in"),
	INDEX("index"),
	INDEXES("indexes"),
	INNER("inner"),
	INPATH("inpath"),
	INPUTDRIVER("inputdriver"),
	INPUTFORMAT("inputformat"),
	INSERT("insert"),
	INT("int"),
	INTERSECT("intersect"),
	INTERVAL("interval"),
	INTO("into"),
	IS("is"),
	ITEMS("items"),
	JAR("jar"),
	JOIN("join"),
	KEYS("keys"),
	KEY_TYPE("key_type"),
	LATERAL("lateral"),
	LEFT("left"),
	LESS("less"),
	LIKE("like"),
	LIMIT("limit"),
	LINES("lines"),
	LOAD("load"),
	LOCAL("local"),
	LOCATION("location"),
	LOCK("lock"),
	LOCKS("locks"),
	LOGICAL("logical"),
	LONG("long"),
	MACRO("macro"),
	MAP("map"),
	MAPJOIN("mapjoin"),
	MATERIALIZED("materialized"),
	MINUS("minus"),
	MINUTE("minute"),
	MONTH("month"),
	MORE("more"),
	MSCK("msck"),
	NONE("none"),
	NOSCAN("noscan"),
	NOT("not"),
	NO_DROP("no_drop"),
	NULL("null"),
	OF("of"),
	OFFLINE("offline"),
	ON("on"),
	OPTION("option"),
	OR("or"),
	ORDER("order"),
	OUT("out"),
	OUTER("outer"),
	OUTPUTDRIVER("outputdriver"),
	OUTPUTFORMAT("outputformat"),
	OVER("over"),
	OVERWRITE("overwrite"),
	OWNER("owner"),
	PARTIALSCAN("partialscan"),
	PARTITION("partition"),
	PARTITIONED("partitioned"),
	PARTITIONS("partitions"),
	PERCENT("percent"),
	PLUS("plus"),
	PRECEDING("preceding"),
	PRESERVE("preserve"),
	PRETTY("pretty"),
	PRINCIPALS("principals"),
	PROCEDURE("procedure"),
	PROTECTION("protection"),
	PURGE("purge"),
	RANGE("range"),
	READ("read"),
	READONLY("readonly"),
	READS("reads"),
	REBUILD("rebuild"),
	RECORDREADER("recordreader"),
	RECORDWRITER("recordwriter"),
	REDUCE("reduce"),
	REGEXP("regexp"),
	RELOAD("reload"),
	RENAME("rename"),
	REPAIR("repair"),
	REPLACE("replace"),
	RESTRICT("restrict"),
	REVOKE("revoke"),
	REWRITE("rewrite"),
	RIGHT("right"),
	RLIKE("rlike"),
	ROLE("role"),
	ROLES("roles"),
	ROLLUP("rollup"),
	ROW("row"),
	ROWS("rows"),
	SCHEMA("schema"),
	SCHEMAS("schemas"),
	SECOND("second"),
	SELECT("select"),
	SEMI("semi"),
	SERDE("serde"),
	SERDEPROPERTIES("serdeproperties"),
	SERVER("server"),
	SET("set"),
	SETS("sets"),
	SHARED("shared"),
	SHOW("show"),
	SHOW_DATABASE("show_database"),
	SKEWED("skewed"),
	SMALLINT("smallint"),
	SORT("sort"),
	SORTED("sorted"),
	SSL("ssl"),
	STATISTICS("statistics"),
	STORED("stored"),
	STREAMTABLE("streamtable"),
	STRING("string"),
	STRUCT("struct"),
	TABLE("table"),
	TABLES("tables"),
	TABLESAMPLE("tablesample"),
	TBLPROPERTIES("tblproperties"),
	TEMPORARY("temporary"),
	TERMINATED("terminated"),
	THEN("then"),
	TIMESTAMP("timestamp"),
	TINYINT("tinyint"),
	TO("to"),
	TOUCH("touch"),
	TRANSACTIONS("transactions"),
	TRANSFORM("transform"),
	TRIGGER("trigger"),
	TRUE("true"),
	TRUNCATE("truncate"),
	UNARCHIVE("unarchive"),
	UNBOUNDED("unbounded"),
	UNDO("undo"),
	UNION("union"),
	UNIONTYPE("uniontype"),
	UNIQUEJOIN("uniquejoin"),
	UNLOCK("unlock"),
	UNSET("unset"),
	UNSIGNED("unsigned"),
	UPDATE("update"),
	URI("uri"),
	USE("use"),
	USER("user"),
	USING("using"),
	UTC("utc"),
	UTCTIMESTAMP("utctimestamp"),
	VALUES("values"),
	VALUE_TYPE("value_type"),
	VARCHAR("varchar"),
	VIEW("view"),
	WHEN("when"),
	WHERE("where"),
	WHILE("while"),
	WINDOW("window"),
	WITH("with"),
	YEAR("year");
	
	private String code;
	
	Keyword(String code){
		this.code = code;
	}

	public static boolean matches(String code) {
		for(Keyword keyword : Keyword.values()) {
			if(keyword.getCode().equals(code)) {
				return true;
			}
		}
		return false;
	}
	
	public String getCode() {
		return code;
	}
	
}
